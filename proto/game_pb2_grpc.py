# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import game_pb2 as game__pb2


class GameServerStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GameStream = channel.unary_stream(
                '/grpc.GameServer/GameStream',
                request_serializer=game__pb2.Empty.SerializeToString,
                response_deserializer=game__pb2.Message.FromString,
                )
        self.SendMessage = channel.unary_unary(
                '/grpc.GameServer/SendMessage',
                request_serializer=game__pb2.Message.SerializeToString,
                response_deserializer=game__pb2.Empty.FromString,
                )
        self.Connect = channel.unary_unary(
                '/grpc.GameServer/Connect',
                request_serializer=game__pb2.Connection.SerializeToString,
                response_deserializer=game__pb2.ConnectionReply.FromString,
                )


class GameServerServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GameStream(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SendMessage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Connect(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_GameServerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GameStream': grpc.unary_stream_rpc_method_handler(
                    servicer.GameStream,
                    request_deserializer=game__pb2.Empty.FromString,
                    response_serializer=game__pb2.Message.SerializeToString,
            ),
            'SendMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.SendMessage,
                    request_deserializer=game__pb2.Message.FromString,
                    response_serializer=game__pb2.Empty.SerializeToString,
            ),
            'Connect': grpc.unary_unary_rpc_method_handler(
                    servicer.Connect,
                    request_deserializer=game__pb2.Connection.FromString,
                    response_serializer=game__pb2.ConnectionReply.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'grpc.GameServer', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class GameServer(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GameStream(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/grpc.GameServer/GameStream',
            game__pb2.Empty.SerializeToString,
            game__pb2.Message.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SendMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/grpc.GameServer/SendMessage',
            game__pb2.Message.SerializeToString,
            game__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Connect(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/grpc.GameServer/Connect',
            game__pb2.Connection.SerializeToString,
            game__pb2.ConnectionReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
